#Headless server service for direct access to pod IP through kube-dns
#In this example the dns entry will be
#quickserv-host.quickserv-subdomain.quick-test.svc.cluster.local
#nslookup quickserv-host.quickserv-subdomain.quick-test.svc.cluster.local
#will confirm that IP of the pod is returned
apiVersion: v1
kind: Service
metadata:
  namespace: quick-test
  name: quickserv-subdomain
spec:
  selector:
    app: alpserv-app
  clusterIP: None
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: apline-pys-deployment
  namespace: quick-test 
spec:
  selector:
    matchLabels:
      app: alpserv-app
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: alpserv-app
    spec:
      hostname: quickserv-host       #This is for direct pod access through kube-dns using headless service
      subdomain: quickserv-subdomain #This is for direct pod access through kube-dns using headless service

      volumes:
      - name: alpcfgmap-test-mount
        configMap:
          name: config-file-alp-test

      containers:
      - name: alpserver
        image: alpine/python:1
        imagePullPolicy: IfNotPresent
        #ports:
        #- containerPort: 5000

        volumeMounts:
        - name: alpcfgmap-test-mount
          mountPath: /usr/share/

        env:
        - name: ALP_AAA_MODE
          valueFrom:
            configMapKeyRef:
              name: alp-env-test
              key: AAA_MODE

        - name: ALP_AAA_MODE_2
          valueFrom:
            configMapKeyRef:
              name: alp-env2-test
              key: AAA_MODE_SECONDARY

        - name: TCP_PORT
          value: "5000"

        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName

        stdin: true
        tty: true

        command: ["/bin/bash"]
        args: ["-c", "/tcp-server.py"]
        securityContext:
          privileged: true

      nodeSelector:
        testcapability: testnode
